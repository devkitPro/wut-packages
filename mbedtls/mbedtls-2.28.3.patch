diff -NBaur mbedtls-2.28.3.orig/library/entropy.c mbedtls-2.28.3/library/entropy.c
--- mbedtls-2.28.3.orig/library/entropy.c	2023-03-24 15:54:53.000000000 +0000
+++ mbedtls-2.28.3/library/entropy.c	2023-04-17 11:43:44.443286039 +0100
@@ -48,6 +48,30 @@
 
 #define ENTROPY_MAX_LOOP    256     /**< Maximum amount to loop before error */
 
+
+#ifdef __WIIU__
+
+#include <stdlib.h>
+#include <coreinit/time.h>
+
+int mbedtls_hardware_poll( void *data,
+                           unsigned char *output, size_t len, size_t *olen )
+{
+    size_t i;
+    (void)(data);
+
+    for (i = 0; i < len; i++) {
+        srand(OSGetSystemTick());
+        output[i] = rand() & 0xff;
+    }
+
+    if(olen)
+        *olen = len;
+    return 0;
+}
+
+#endif
+
 void mbedtls_entropy_init(mbedtls_entropy_context *ctx)
 {
     ctx->source_count = 0;
diff -NBaur mbedtls-2.28.3.orig/library/net_sockets.c mbedtls-2.28.3/library/net_sockets.c
--- mbedtls-2.28.3.orig/library/net_sockets.c	2023-03-24 15:54:53.000000000 +0000
+++ mbedtls-2.28.3/library/net_sockets.c	2023-04-17 11:55:48.905968660 +0100
@@ -33,7 +33,7 @@
 
 #if !defined(unix) && !defined(__unix__) && !defined(__unix) && \
     !defined(__APPLE__) && !defined(_WIN32) && !defined(__QNXNTO__) && \
-    !defined(__HAIKU__) && !defined(__midipix__)
+    !defined(__HAIKU__) && !defined(__midipix__) && !defined(__WIIU__)
 #error "This module only works on Unix and Windows, see MBEDTLS_NET_C in config.h"
 #endif
 
@@ -341,7 +341,7 @@
 
 #if defined(__socklen_t_defined) || defined(_SOCKLEN_T) ||  \
     defined(_SOCKLEN_T_DECLARED) || defined(__DEFINED_socklen_t) || \
-    defined(socklen_t) || (defined(_POSIX_VERSION) && _POSIX_VERSION >= 200112L)
+    defined(socklen_t) || (defined(_POSIX_VERSION) && _POSIX_VERSION >= 200112L) || defined(__WIIU__)
     socklen_t n = (socklen_t) sizeof(client_addr);
     socklen_t type_len = (socklen_t) sizeof(type);
 #else
@@ -422,6 +422,7 @@
             }
 
             memcpy(client_ip, &addr4->sin_addr.s_addr, *ip_len);
+#ifndef __WIIU__
         } else {
             struct sockaddr_in6 *addr6 = (struct sockaddr_in6 *) &client_addr;
             *ip_len = sizeof(addr6->sin6_addr.s6_addr);
@@ -431,6 +432,7 @@
             }
 
             memcpy(client_ip, &addr6->sin6_addr.s6_addr, *ip_len);
+#endif
         }
     }
 
diff -NBaur mbedtls-2.28.3.orig/library/timing.c mbedtls-2.28.3/library/timing.c
--- mbedtls-2.28.3.orig/library/timing.c	2023-03-24 15:54:53.000000000 +0000
+++ mbedtls-2.28.3/library/timing.c	2023-04-17 11:31:55.268868464 +0100
@@ -29,7 +29,7 @@
 
 #if !defined(unix) && !defined(__unix__) && !defined(__unix) && \
     !defined(__APPLE__) && !defined(_WIN32) && !defined(__QNXNTO__) && \
-    !defined(__HAIKU__) && !defined(__midipix__)
+    !defined(__HAIKU__) && !defined(__midipix__) && !defined(__WIIU__)
 #error "This module only works on Unix and Windows, see MBEDTLS_TIMING_C in config.h"
 #endif
 
